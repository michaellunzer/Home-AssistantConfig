#moon sensor
#   - platform: moon
  
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'time_utc'
    #   - 'date_time'
      - 'date_time_iso' ## needed for sunrise automation 
    #   - 'time_date'
    #   - 'beat'

# Season Sensor
  - platform: season
    type: astronomical
  
# pollen sensor  -- this was replaced by iqvia platform in the main config
#   - platform: pollen
#     zip_code: !secret pollen_zip_code
#     monitored_conditions:
#     - allergy_average_forecasted
#     - allergy_average_historical
#     - allergy_index_today
#     - allergy_index_tomorrow
#     - allergy_index_yesterday
#     - disease_average_forecasted
    

###########################################
### Xfinity Custom Component ##############
##### don't have comcast anymore!!!! ######
###########################################

#   - platform: xfinity
#     username: !secret xfinity_email
#     password: !secret xfinity_password


### Weatheralerts Custom Component ###

  - platform: weatheralerts
    state: CA
    zone: "006" #SF
  - platform: weatheralerts
    state: CA
    zone: "072" #Truckee
#   - platform: weatheralerts
#     state: NV
#     zone: "002" #Tahoe / Nevada

### Authenticated Custom Component ###
  - platform: authenticated

# Weather prediction     yr.no was depreciated in v0.115
#   - platform: yr
#     name: weather
#     monitored_conditions:
#      - temperature
#      - symbol
#      - precipitation
#      - windSpeed
#      - humidity
#      - fog
#      - cloudiness
      # - lowClouds
      # - mediumClouds
      # - highClouds
      # - dewpointTemperature
      # - pressure
      # - windDirection
      
      
      
      
### Need to setup Darksky sensors first
### https://diyfuturism.com/index.php/2018/01/13/useful-sensor-wind-direction-home-assistant/

# # Convert the Wind Direction from degrees to cardinal
  - platform: template
    sensors:
      friendly_wind_direction:
        friendly_name: 'Wind Direction'
        value_template: >-
          {%if state_attr('weather.dark_sky', 'wind_bearing') | float<=11 %}N
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float>348 %}N
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=34 | float>11 %}NNE
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=56 | float>34 %}NE
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=79 | float>56 %}ENE
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=101 | float>79 %}E
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=124 | float>101 %}ESE
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=146 | float>124 %}SE
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=169 | float>146 %}SSE
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=191 | float>169 %}S
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=214 | float>191 %}SSW
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=236 | float>214 %}SW
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=259 | float>236 %}WSW
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=281 | float>259 %}W
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=304 | float>281 %}WNW
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=326 | float>304 %}NW
          {% elif state_attr('weather.dark_sky', 'wind_bearing') | float<=348 | float>326 %}NNW
          {%- endif %}
          
      ###### Last Google Drive Backup ######
      google_drive_snapshot_backup_date:
        friendly_name: "Last Google Drive Backup Date"
        value_template: "{{ state_attr('sensor.snapshot_backup', 'last_snapshot') }}"
        # device_class: timestamp
        # icon: mdi:google-drive
        
      google_drive_snapshots_backed_up:
        friendly_name: "Snapshots in Google Drive"
        value_template: "{{ state_attr('sensor.snapshot_backup', 'snapshots_in_google_drive') }}"
        unit_of_measurement: 'snapshots'
        # icon: mdi:folder-google-drive

      spotify_song:
        friendly_name: "Spotify Song"
        value_template: "{{ state_attr('media_player.spotify', 'media_title') }}"

      spotify_artist:
        friendly_name: "Spotify Artist"
        value_template: "{{ state_attr('media_player.spotify', 'media_artist') }}"


###################################################################
###### Depreciated -- replaced by Mobile App Integration ##########
###### Leaving in as a template sensor example ####################
###################################################################
# # iPhone Battery Sensor
#   - platform: template
#     sensors:
#       battery_iphone:
#         friendly_name: LunziPhone Battery
#         # "entity_id:" ensures that this sensor will only update when your device tracker does.
#         entity_id: device_tracker.iphone
#         unit_of_measurement: '%'
#         value_template: >-
#             {%- if states.device_tracker.iphone.attributes.battery %}
#                 {{ states.device_tracker.iphone.attributes.battery|round }}
#             {% else %}
#                 {{ states.sensor.battery_iphone.state }}
#             {%- endif %}
#         icon_template: >
#             {% set battery_level = states.sensor.battery_iphone.state|default(0)|int %}
#             {% set battery_round = (battery_level / 10) |int * 10 %}
#             {% if battery_round >= 100 %}
#               mdi:battery
#             {% elif battery_round > 0 %}
#               mdi:battery-{{ battery_round }}
#             {% else %}
#               mdi:battery-alert
#             {% endif %}


#### CPU Speed Sensor is throwing a lot of errors ####
# CPU Speed Sensor
#   - platform: cpuspeed
  
# LunzPi Supervisor Status
#not currently working for whatever reason
#   - platform: supervisord
#     url: http://lunzpi.local:9001/


# HaveIBeenPwned Sensor
### Removing this because they started charging $3.50/mo for API Access
#   - platform: haveibeenpwned
#     email: 
#     - !secret email



# Version Sensor to add to System Group
  - platform: version
  
  
# Folder Sensor (monitors how much stuff is in the folder - in MB)
#   - platform: folder
#     folder: /config
#   - platform: folder
#     folder: /backup
#   - platform: folder
#     folder: /addons
#   - platform: folder
#     folder: /share
#   - platform: folder
#     folder: /mnt/backups
    
# File Sensor
#   - platform: filesize
#     file_paths:
#       - /config/home-assistant_v2.db

  
# System Monitor Sensor  
  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: /home/
    - type: memory_free
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot
    # doesn't report any values
    # - type: network_in
    #   arg: eth0
    # - type: network_out
    #   arg: eth0

### Not sure if this will work with proxmox to report the host system battery state

#   - platform: linux_battery
    
# Speed Test Sensor
#   - platform: speedtest
#     minute: 30
#     hour:
#     - 4
#     monitored_conditions:
#       - ping
#       - download
#       - upload

# Uptime - does this work???
#   - platform: uptime
#     name: "Time Online"
#     unit_of_measurement: hours
    
# LastFM
#   - platform: lastfm
#     api_key: !secret lastfm_api_key
#     users:
#       - michaellunzer
      
# qbittorrent ##### this takes a really long time to load and I don't use it that much
  - platform: qbittorrent
    url: 'http://192.168.1.144:8080'
    username: !secret qbt_username
    password: !secret qbt_password

#DuckDNS Certificate Expirary
  - platform: cert_expiry
    host: !secret certificate_expiry_url
    # name: "Home Assistant DuckDNS SSL Certificate"
    
# BRUH MultiSensor
# https://github.com/bruhautomation/ESP-MQTT-JSON-Multisensor

#   - platform: mqtt  
#     state_topic: "bruh/sensornode1"  
#     name: "SN1 Humidity"  
#     unit_of_measurement: "%"  
#     value_template: '{{ value_json.humidity | round(1) }}'  
  
#   - platform: mqtt  
#     state_topic: "bruh/sensornode1"  
#     name: "SN1 LDR"
#     ##This sensor is not calibrated to actual LUX. Rather, this a map of the input voltage ranging from 0 - 1023.
#     unit_of_measurement: "LUX"  
#     value_template: '{{ value_json.ldr }}'  
  
#   - platform: mqtt  
#     state_topic: "bruh/sensornode1"  
#     name: "SN1 PIR"  
#     value_template: '{{ value_json.motion }}'  
  
#   - platform: mqtt  
#     state_topic: "bruh/sensornode1"  
#     name: "SN1 Temperature"  
#     unit_of_measurement: "°F"  
#     value_template: '{{ value_json.temperature | round(1) }}'  
    
#   - platform: mqtt
#     state_topic: "bruh/sensornode1"
#     name: "SN1 Real Feel"
#     unit_of_measurement: "°F"
#     value_template: '{{ value_json.heatIndex | round(1) }}'
    
    
    ######### Google Drive Backup Status ######### 
    
  - platform: mqtt
    name: "Google Backup Snapshots Count"
    state_topic: "googlebackup/result"
    json_attributes_topic: "googlebackup/result"
    unit_of_measurement: 'Snapshots'
    value_template: "{{ value_json.fileCount }}"
  - platform: mqtt
    name: "Last Snapshot Google Backup"
    state_topic: "googlebackup/result"
    json_attributes_topic: "googlebackup/result"
    # unit_of_measurement: 'Timestamp'
    value_template: "{{ value_json.backupTimestamp }}"
    
    
    ########## sonoff_amplifier running Tasmota ############
    # not needed anyomre
    
#   - platform: mqtt  
#     state_topic: "tele/sonoff_amplifier/SENSOR"  
#     name: "Amp Humidity"  
#     unit_of_measurement: "%"  
#     value_template: '{{ value_json.Humidity | round(1) }}' 
    
#   - platform: mqtt  
#     state_topic: "tele/sonoff_amplifier/SENSOR"  
#     name: "Amp Temperature"  
#     unit_of_measurement: "°C"  
#     value_template: '{{ value_json.Temperature | round(1) }}'  
    
    
### Room-Assistant Bluetooth LE Presence Detection running on Raspberry Pi Zero W and sending updates over MQTT
## broken in 0.88 

#   - platform: mqtt_room
#     device_id: e51c8f2fd74b
#     away_timeout: 30
#     name: 'Tile Keys R-A_BT'
    
#   - platform: mqtt_room
#     device_id: 760e4e3e2f66
#     away_timeout: 30
#     name: 'Pebble 2 Watch R-A_BT'
    
#   - platform: mqtt_room
#     device_id: 4a896f874cc0
#     away_timeout: 30
#     name: 'Pebble Time Round Watch R-A_BT'

#   - platform: mqtt_room
#     device_id: d6234b09ace6
#     away_timeout: 30
#     name: 'Playbulb Bathroom Light R-A_BT'



##########################################
##### Withings Scale Template Sensor #####
##### Converts kgs to lbs ################
##########################################


  - platform: template
    sensors:
      withings_weight_lbs_michael_lunzer:
        friendly_name: "withings weight_lbs_michael_lunzer"
        unit_of_measurement: 'lbs'
        value_template: "{{ (states('sensor.withings_weight_kg_michael_lunzer') | float * 2.20462262185) | round(2) }}"
        icon_template: mdi:weight-pound

  - platform: template
    sensors:
      withings_bone_mass_lbs_michael_lunzer:
        friendly_name: "withings bone_mass_lbs_michael_lunzer"
        unit_of_measurement: 'lbs'
        value_template: "{{ (states('sensor.withings_bone_mass_kg_michael_lunzer') | float * 2.20462262185) | round(2) }}"
        icon_template: mdi:weight-pound
        
  - platform: template
    sensors:
      withings_fat_free_mass_lbs_michael_lunzer:
        friendly_name: "withings fat_free_mass_lbs_michael_lunzer"
        unit_of_measurement: 'lbs'
        value_template: "{{ (states('sensor.withings_fat_free_mass_kg_michael_lunzer') | float * 2.20462262185) | round(2) }}"
        icon_template: mdi:weight-pound
        
  - platform: template
    sensors:
      withings_fat_mass_lbs_michael_lunzer:
        friendly_name: "withings fat_mass_lbs_michael_lunzer"
        unit_of_measurement: 'lbs'
        value_template: "{{ (states('sensor.withings_fat_mass_kg_michael_lunzer') | float * 2.20462262185) | round(2) }}"
        icon_template: mdi:weight-pound
        
  - platform: template
    sensors:
      withings_muscle_mass_lbs_michael_lunzer:
        friendly_name: "withings muscle_mass_lbs_michael_lunzer"
        unit_of_measurement: 'lbs'
        value_template: "{{ (states('sensor.withings_muscle_mass_kg_michael_lunzer') | float * 2.20462262185) | round(2) }}"
        icon_template: mdi:weight-pound




##############################################
#### Monitor Bluetooth Presence Detection ####
##############################################


  - platform: mqtt
    state_topic: 'monitor/monitor-pi/lunziphone11_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_lunziphone_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/pebble2_btle'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_pebble2_btle'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/LunzBulb_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_LunzBulb_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/lunzipad_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_lunzipad_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/pebble2_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_pebble2_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/pebbleblack_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_pebbleblack_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/pebblebrown_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_pebblebrown_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/tilekeys_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_tilekeys_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/airpods_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_airpods_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/boseqc35ii_bt'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_boseqc35ii_bt'
    
  - platform: mqtt
    state_topic: 'monitor/monitor-pi/tilekeys_btle'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'monitor_tilekeys_btle'

    ######## Volume Knob ########
    
#   - platform: mqtt
#     state_topic: "rotary/volume/state"
#     name: "Volume Knob"
#     retain: true


################################
###### flu near you sensor #####
################################
# now configured via the frontend after 0.109


#   - platform: flunearyou
  
##########################
###### bart schedule #####
##########################

#   - platform: gtfs_realtime
#     trip_update_url: 'https://data.texas.gov/download/rmk2-acnw/application%2foctet-stream'
#     vehicle_position_url: 'https://data.texas.gov/download/eiei-9rpf/application%2Foctet-stream'
#     departures:
#     - name: Downtown to airport
#       route: 100
#       stopid: 514
#   - platform: gtfs_realtime
#     trip_update_url: 'http://api.bart.gov/gtfsrt/tripupdate.aspx'
#     # vehicle_position_url: 'https://data.texas.gov/download/eiei-9rpf/application%2Foctet-stream'
#     departures:
#     - name: 24th Street Station
#     #   route: 
#       stopid: 24TH      
#   - platform: gtfs_realtime
#     trip_update_url: 'http://api.bart.gov/api/etd.aspx?cmd=etd&orig=24TH&key=MW9S-E7SL-26DU-VV8V&json=y'
#     # vehicle_position_url: 'https://data.texas.gov/download/eiei-9rpf/application%2Foctet-stream'
#     departures:
#     - name: 24th Street Station TEST
#     #   route: 
#       stopid: 24TH    



#   - platform: gtfs
#     name: "24th to Millbrae"
#     origin: 24TH
#     destination: MLBR
#     data: bart.zip
#   - platform: gtfs
#     name: "Millbrae to 24th"
#     origin: MLBR
#     destination: 24TH
#     data: bart.zip
#   - platform: gtfs
#     name: "24th to Montgomery"
#     origin: 24TH
#     destination: MONT
#     data: bart.zip
#   - platform: gtfs
#     name: "Montgomery to 24th"
#     origin: MONT
#     destination: 24TH
#     data: bart.zip

####################################
#### Ford GoBikes | Citybikes ######
####################################

  - platform: citybikes
    name: BayWheels
    radius: 1000
    # stations:
    #   - SF-Q23-3
    #   - SF-Q22-2
    #   - SF-Q22-1

####################################
######## Spotcast Spotify ##########
####################################

  - platform: spotcast
    country: US



########################################################
######## Plex Recently Added Custom Component ##########
########################################################

  - platform: plex_recently_added
    token: !secret plex_secret_token
    host: 192.168.1.144
    port: 32400





####################################
######## apcupsd Power UPS #########
####################################

# this UPS is not currently being used

#   - platform: apcupsd
#     resources:
#       - apc
#       - date
#       - hostname
#       - version
#       - upsname
#       - cable
#       - driver
#       - upsmode
#       - starttime
#       - model
#       - status
#       - linev
#       - loadpct
#       - bcharge
#       - timeleft
#       - mbattchg
#       - mintimel
#       - maxtime
#       - maxlinev
#       - minlinev
#       - outputv

####################################
######## Aftership #################
####################################

  - platform: aftership
    api_key: !secret aftership_api_key
    
  # Aftership
  - platform: template
    sensors: 
      aftership_pending:
         value_template: '{{ states.sensor.aftership.attributes.pending }}'  
         friendly_name: 'Pending'
      aftership_intransit:
         value_template: '{{ states.sensor.aftership.attributes.intransit }}'  
         friendly_name: 'In Transit'
      aftership_delivered:
         value_template: '{{ states.sensor.aftership.attributes.delivered }}'  
         friendly_name: 'Delivered'

####################################
######## NextBus ###################
####################################

#### https://www.nextbus.com/#!/<agency>/<route>/<direction>/<stop>
##   https://www.nextbus.com/#!/sf-muni/49/     49___I_F00  /  5565  /    5561
##   https://www.nextbus.com/#!/sf-muni/12/     12___I_F00 /   3476
##   https://www.nextbus.com/#!/sf-muni/48/     48___I_N00  /  3477   /3484
##.  https://www.nextbus.com/#!/sf-muni/48/.    48___I_F00.   /3470
##   https://www.nextbus.com/#!/sf-muni/49/.    49___I_C01. /6473

# https://www.nextbus.com/#!/sf-muni/49/49___I_C01/5565/5561

  - platform: nextbus
    agency: sf-muni
    route: 49
    stop: 6473 ## 5565 was the old stop outside of 3340
    name: "49-Van Ness-Mission"
    
  - platform: nextbus
    agency: sf-muni
    route: 12
    stop: 4677 #3476 invalid stop ID
    name: "12-Folsom-Pacific"
    
  - platform: nextbus
    agency: sf-muni
    route: 48
    stop: 3470    #3477 was the old stop outside of 3340
    name: "48-Quintara-24th Mission"
    

####################################
######## History Stats #############
####################################

# https://www.home-assistant.io/components/sensor.history_stats/
# History Statistics Sensor for how long I have been at home TODAY
  - platform: history_stats
    name: "Michael - Time At Home Today"
    entity_id: person.michael_lunzer
    state: 'home'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

## History Statistics Sensor for how long I have been at home THIS WEEK
  - platform: history_stats
    name: "Michael - Time At Home This Week"
    entity_id: person.michael_lunzer
    state: 'home'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

## History Statistics Sensor for how long I have been at home THIS MONTH
  - platform: history_stats
    name: "Michael - Time At Home This Month"
    entity_id: person.michael_lunzer
    state: 'home'
    type: time
    end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    duration:
      days: 30

###### LAURA #######

# History Statistics Sensor for how long Laura has been at my home TODAY
  - platform: history_stats
    name: "Laura - Time At Home Today"
    entity_id: person.laura_logan #device_tracker.lauras_iphone_ios
    state: 'home'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

## History Statistics Sensor for how long Laura has been at my home THIS WEEK
  - platform: history_stats
    name: "Laura - Time At Home This Week"
    entity_id: person.laura_logan #device_tracker.lauras_iphone_ios
    state: 'home'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

## History Statistics Sensor for how long Laura has been at my home THIS MONTH
  - platform: history_stats
    name: "Laura - Time At Home This Month"
    entity_id: person.laura_logan #device_tracker.lauras_iphone_ios
    state: 'home'
    type: time
    end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    duration:
      days: 30

### commented out entity_id: sensor.date to avoid errors. might undo it

  - platform: template
    sensors:
      #----- Count Automations
        count_automations:
        #   entity_id: sensor.date
          value_template: >
            {%- set domains = ['automation'] -%}
            {%- for domain in domains -%}
              {%- for item in states[domain] -%}
                {% if loop.first %}
                  {{loop.length}}
                {% endif %}
              {%- endfor -%}
            {%- endfor -%}
      #----- Count Device Trackers
        count_device_trackers:
        #   entity_id: sensor.date
          value_template: >
            {%- set domains = ['device_tracker'] -%}
            {%- for domain in domains -%}
              {%- for item in states[domain] -%}
                {% if loop.first %}
                  {{loop.length}}
                {% endif %}
              {%- endfor -%}
            {%- endfor -%}        
      #----- Count Lights
        count_lights:
        #   entity_id: sensor.date
          value_template: >
            {%- set domains = ['light'] -%}
            {%- for domain in domains -%}
              {%- for item in states[domain] -%}
                {% if loop.first %}
                  {{loop.length}}
                {% endif %}
              {%- endfor -%}
            {%- endfor -%}
      #----- Count Binary Sensors
        count_binary_sensors:
        #   entity_id: sensor.date
          value_template: >
            {%- set domains = ['binary_sensor'] -%}
            {%- for domain in domains -%}
              {%- for item in states[domain] -%}
                {% if loop.first %}
                  {{loop.length}}
                {% endif %}
              {%- endfor -%}
            {%- endfor -%}
      #----- Count Sensors
        count_sensors:
        #   entity_id: sensor.date
          value_template: >
            {%- set domains = ['sensor'] -%}
            {%- for domain in domains -%}
              {%- for item in states[domain] -%}
                {% if loop.first %}
                  {{loop.length}}
                {% endif %}
              {%- endfor -%}
            {%- endfor -%}
      #----- Count Switches
        count_switches:
        #   entity_id: sensor.date
          value_template: >
            {%- set domains = ['switch'] -%}
            {%- for domain in domains -%}
              {%- for item in states[domain] -%}
                {% if loop.first %}
                  {{loop.length}}
                {% endif %}
              {%- endfor -%}
            {%- endfor -%}
      #----- Count Zones
        count_zones:
        #   entity_id: sensor.date
          value_template: >
            {%- set domains = ['zone'] -%}
            {%- for domain in domains -%}
              {%- for item in states[domain] -%}
                {% if loop.first %}
                  {{loop.length}}
                {% endif %}
              {%- endfor -%}
            {%- endfor -%}
    
#############################################################
######## SN1_motion sensor last seen template sensor ########
#############################################################

  - platform: template
    sensors:
      template_last_motion:
        friendly_name: 'sn1_motion_last_seen'
        value_template: >
          {%- set pirs = [states.binary_sensor.sn1_motion] %}
          {% for pir in pirs %}
            {% if as_timestamp(pir.last_changed) == as_timestamp(pirs | map(attribute='last_changed') | max) %}
              {{ pir.name }} {{pir.last_changed.astimezone(now().tzinfo).strftime('%d-%m %X')}}
            {% endif %}
          {% endfor %}

#############################################
### Corona Virus Figures Comma Separated ####
#############################################

# Worldwide

  - platform: template
    sensors:
      worldwide_coronavirus_confirmed_comma_separated:
        friendly_name: Worldwide Coronavirus Cases Confirmed
        value_template: "{{ '{0:,}'.format(states.sensor.worldwide_coronavirus_confirmed.state | int) }}"
        unit_of_measurement: ""

  - platform: template
    sensors:
      worldwide_coronavirus_infected_comma_separated:
        friendly_name: Worldwide Coronavirus Cases Infected
        value_template: "{{ '{0:,}'.format(states.sensor.worldwide_coronavirus_current.state | int) }}"
        unit_of_measurement: ""

  - platform: template
    sensors:
      worldwide_coronavirus_recovered_comma_separated:
        friendly_name: Worldwide Coronavirus Cases Recovered
        value_template: "{{ '{0:,}'.format(states.sensor.worldwide_coronavirus_recovered.state | int) }}"
        unit_of_measurement: ""

  - platform: template
    sensors:
      worldwide_coronavirus_deceased_comma_separated:
        friendly_name: Worldwide Coronavirus Cases Deceased
        value_template: "{{ '{0:,}'.format(states.sensor.worldwide_coronavirus_deaths.state | int) }}"
        unit_of_measurement: ""

# USA

  - platform: template
    sensors:
      us_coronavirus_confirmed_comma_separated:
        friendly_name: USA Coronavirus Cases Confirmed
        value_template: "{{ '{0:,}'.format(states.sensor.us_coronavirus_confirmed.state | int) }}"
        unit_of_measurement: ""

  - platform: template
    sensors:
      us_coronavirus_infected_comma_separated:
        friendly_name: USA Coronavirus Cases Infected
        value_template: "{{ '{0:,}'.format(states.sensor.us_coronavirus_current.state | int) }}"
        unit_of_measurement: ""

  - platform: template
    sensors:
      us_coronavirus_recovered_comma_separated:
        friendly_name: USA Coronavirus Cases Recovered
        value_template: "{{ '{0:,}'.format(states.sensor.us_coronavirus_recovered.state | int) }}"
        unit_of_measurement: ""

  - platform: template
    sensors:
      us_coronavirus_deceased_comma_separated:
        friendly_name: USA Coronavirus Cases Deceased
        value_template: "{{ '{0:,}'.format(states.sensor.us_coronavirus_deaths.state | int) }}"
        unit_of_measurement: ""
        
        
################################################
### Jinja2 Template Long Lived Access Token ####
################################################

#   - platform: version     ##already in the config
  - platform: rest
    name: Addons
    resource: 'https://home.michaellunzer.com/api/hassio/supervisor/info'
    headers:
      Authorization: !secret github_readme_token 
      json_attributes_path: "$.data"
    json_attributes:
      - addons
      - addons_repositories
    value_template: '{{ value_json.data.addons | count}}'
    
    
################################################
### REST Sensor Quote of the Day OOTD ##########
################################################

  - platform: rest
    resource: https://quotes.rest/qod?language=en
    name: Quote of the Day
    scan_interval: 43200
    json_attributes_path: '$.contents.quotes[0]'
    json_attributes:
      - quote
      - author
      - category
    value_template: 'OK'
        
        
####################################################
### Fortnite Stats Sensor - my Custom Component ####
####################################################

  - platform: fortnite
    name: Fortnite Solo Stats
    api_key: !secret fortnite_api_key
    player_id: Captain_Crunch88
    game_platform: "GAMEPAD"
    game_mode: "SOLO"
  - platform: fortnite
    name: Fortnite Duo Stats
    api_key: !secret fortnite_api_key
    player_id: Captain_Crunch88
    game_platform: "GAMEPAD"
    game_mode: "DUO"
  - platform: fortnite
    name: Fortnite Squads Stats
    api_key: !secret fortnite_api_key
    player_id: Captain_Crunch88
    game_platform: "GAMEPAD"
    game_mode: "SQUAD"


####################################################
### Darksky Sensor (not weather platform)  #########
####################################################


#   - platform: darksky
#     api_key: !secret darksky_api_key
#     forecast:
#       - 0
#     hourly_forecast:
#       - 0
#       - 1
#     monitored_conditions:
#       - summary
#       - icon
#       - temperature


####################################################
############ CUPS Print Server  ####################
####################################################

  - platform: cups
    host: 192.168.1.41
    printers:
      - Brother_HL-L2300D_series_print_server
        
        

####################################################
############ Wireguard Sensor ######################
####################################################

  - platform: rest
    resource: http://a0d7b954-wireguard
    
    
    
####################################################
############ Bitcoin Sensor ########################
####################################################
  - platform: bitcoin
    display_options:
        - exchangerate
        - trade_volume_btc
        - miners_revenue_usd
        - btc_mined
        - difficulty
        - minutes_between_blocks
        - number_of_transactions
        - hash_rate
        - mined_blocks
        - blocks_size
        - total_fees_btc
        - total_btc_sent
        - estimated_btc_sent
        - total_btc
        - total_blocks
        - next_retarget
        - estimated_transaction_volume_usd
        - market_price_usd
       
      
      
      
      
####################################################################
############ Custom Compoent: Crypto Tracker #######################
####################################################################
      
  - platform: cryptostate
    resources:
    #Example of the first formula
      - compare: doge-usd
        name: crypto_dogecoin_price

      - compare: btc-usd
        name: crypto_bitcoin_price

      - compare: eth-usd
        name: crpyto_ethereum_price
        
      - compare: hnt-usd
        name: crypto_helium_price

    # #Example of the alternative formula
    #   - compare: -doge
    #     name: dogecoin

    #   - compare: eur-btc
    #     name: bitcoin

    #   - compare: eur-eth
    #     name: ethereum
      
      
####################################################################
############ Custom Compoent: Helium ###############################
####################################################################
      
    
  - platform: helium
    wallets:
      - 131DzR51J16QetvhKpp55xgoZskFaZRpmPa45eUQPvAXTbSumCo
    hotspots:
      - 112s28HjPqChmFrx37jipEwzULvRnFsH8yXC1McS4u5apF1XtgBw
        
        
  - platform: template
    sensors:
      helium_wallet_value:
        value_template:
          "{{ sensor.helium_hnt_oracle_price * sensor.helium_wallet_131dzr51j16qetvhkpp55xgozskfazrpmpa45euqpvaxtbsumco }}"  


        
#####################################################################
############ Custom Component: Instagram ############################
#####################################################################
        ## working!!! 
  - platform: instagram
    username: itsallgravy.cat
    password: !secret gravy_instagram_password
  - platform: instagram
    username: itsallgravy.cat
    password: !secret michaellunzer_instagram_password
    
    
#####################################################################
############ Custom Component: Next Holiday #########################
#####################################################################

  - platform: next_holiday
    sources: 
     - country: "USA"
       state: "CA"
    

#####################################################################
############ Addon: USPS Informed Delivery $#########################
#####################################################################

  - platform: mqtt
    name: Delivered Packages
    unit_of_measurement: 'packages'
    state_topic: "home/delivered_packages"

  - platform: mqtt
    name: Enroute Packages
    unit_of_measurement: 'packages'
    state_topic: "home/enroute_packages"

  - platform: mqtt
    name: Enroute Today Packages
    unit_of_measurement: 'packages'
    state_topic: "home/enroute_today_packages"
    
    
    
    
############################################################################
############ Custom Component: NHL SJ Sharks Score #########################
############################################################################

  - platform: nhl_api
    team_id: 28
    name: San Jose Sharks


############################################################################
############ Custom Component: Zwift #######################################
############################################################################


  - platform: zwift
    username: !secret my_zwift_username
    password: !secret my_zwift_password
    # players:
    #   - !secret my_friends_zwift_player_id



############################################################################
############ SF BART REST API TEMPLATE SENSOR ##############################
############################################################################



#   - platform: rest
#     resource: https://api.bart.gov/api/etd.aspx?orig=24TH&cmd=etd&key=MW9S-E7SL-26DU-VV8V&dir=s&json=y

  - platform: rest
    name: BART_24th_street_station_northbound
    json_attributes_path: "$.root.station[0].etd[0].estimate[0]"
    json_attributes:
      - minutes
      - platform
      - direction
      - length
      - color
      - delay
      - hexcolor
      - bikeflag
    value_template: "OK"
    ### "{{ value_json['root']['station'][0]['etd'][0]['estimate'][0]['minutes'].title() }}"
    unit_of_measurement: "minutes"
    icon: mdi:train
    resource: https://api.bart.gov/api/etd.aspx?orig=24TH&cmd=etd&key=MW9S-E7SL-26DU-VV8V&dir=n&json=y





#   - platform: template
  
  
  
#   - platform: rest
#     name: BART_24th_street_station_southbound
#     json_attributes_path: "$.root.station[0].etd[0].estimate[0]"
#     json_attributes:
#       - minutes
#       - platform
#       - direction
#       - length
#       - color
#       - delay
#       - hexcolor
#       - bikeflag
#     value_template: "{{ value_json['root']['station'][0]['etd'][0]['estimate'][0]['minutes'].title() }}"
#     unit_of_measurement: "minutes"
#     icon: mdi:train
#     resource: https://api.bart.gov/api/etd.aspx?orig=24TH&cmd=etd&key=MW9S-E7SL-26DU-VV8V&dir=s&json=y


#   - platform: rest
#     name: BART_24th_street_station_northbound
#     resource: https://api.bart.gov/api/etd.aspx?orig=24TH&cmd=etd&key=MW9S-E7SL-26DU-VV8V&dir=n&json=y
#     json_attributes:
#       - bedroom1
#       - bedroom2
#       - bedroom3
#     value_template: "OK"
#   - platform: template
#     sensors:
#       bedroom1_temperature:
#         value_template: "{{ state_attr('sensor.bart_24th_street_station_northbound', 'bedroom1')['temperature'] }}"
#         unit_of_measurement: "minutes"
#       bedroom1_humidity:
#         value_template: "{{ state_attr('sensor.bart_24th_street_station_northbound', 'bedroom1')['humidity'] }}"
#         unit_of_measurement: "minutes"
#       bedroom1_battery:
#         value_template: "{{ state_attr('sensor.bart_24th_street_station_northbound', 'bedroom1')['battery'] }}"
#         unit_of_measurement: "minutes"
#       bedroom2_temperature:
#         value_template: "{{ state_attr('sensor.bart_24th_street_station_northbound', 'bedroom2')['temperature'] }}"
#         unit_of_measurement: "minutes"














#   - platform: rest
#     name: BART_24th_street_station_northbound
#     json_attributes_path: "$.root.station[0].etd[0].estimate[0]"
#     json_attributes:
#       - minutes
#       - platform
#       - direction
#       - length
#       - color
#       - delay
#       - hexcolor
#       - bikeflag
#     value_template: "{{ value_json['root']['station'][0]['etd'][0]['estimate'][0]['minutes'].title() }}"
#     unit_of_measurement: "minutes"
#     icon: mdi:train
#     resource: https://api.bart.gov/api/etd.aspx?orig=24TH&cmd=etd&key=MW9S-E7SL-26DU-VV8V&dir=n&json=y
#   - platform: rest
#     name: BART_24th_street_station_southbound
#     json_attributes_path: "$.root.station[0].etd[0].estimate[0]"
#     json_attributes:
#       - minutes
#       - platform
#       - direction
#       - length
#       - color
#       - delay
#       - hexcolor
#       - bikeflag
#     value_template: "{{ value_json['root']['station'][0]['etd'][0]['estimate'][0]['minutes'].title() }}"
#     unit_of_measurement: "minutes"
#     icon: mdi:train
#     resource: https://api.bart.gov/api/etd.aspx?orig=24TH&cmd=etd&key=MW9S-E7SL-26DU-VV8V&dir=s&json=y



############################################################################
############ OhmConnect API  ###############################################
############################################################################


  - platform: ohmconnect
    id: 6znEGqry
    
    ### ohmconnect ID is found from here: https://login.ohmconnect.com/api/v2/settings
    #### look at end of this: "verify_ohm_hour_url":"https://login.ohmconnect.com/verify-ohm-hour/6znEGqry"}



